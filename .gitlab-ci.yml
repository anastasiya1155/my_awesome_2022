# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:1.13

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/vova.solop/pa2020

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - build
  - deploy

compile:
  stage: build
  script:
    - cd $CI_PROJECT_DIR/backend  
    - GOOS=linux GOARCH=amd64 go build -v -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/main ./main.go
  artifacts:
    paths:
      - main

copy_to_remote:
  stage: deploy
  script:
    - mkdir -p ~/.ssh/
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$PEM_KEY" >> ~/.ssh/key.pem
    - chmod 400 ~/.ssh/key.pem
    - echo $PEM_KEY
    - scp -i ~/.ssh/key.pem main $SERVER_USER@$SERVER_ADDRESS:pa2020/backend
    - ssh sjh "pm2 restart back"     
